{"version":3,"sources":["LayoutMain.js","LayoutHeader.js","LayoutFooter.js","LayoutAll.js","App.js","index.js"],"names":["LayoutMain","deleteDo","e","id","target","dataset","_this","props","destroyElement","checkDo","checkDone","allIsDone","allDone","_this2","this","listOfTodos","getTodos","show","filter","todo","isDone","completedIds","map","react_default","a","createElement","className","style","display","type","checked","length","onChange","htmlFor","key","includes","data-id","todoName","onClick","React","Component","LayoutHeader","state","doName","changeName","setState","value","addDoToList","preventDefault","addDo","onSubmit","placeholder","LayoutFooter","checkDoos","showFooter","getShow","isNotDone","href","showAll","activeOnly","completedOnly","clearCompleted","LayoutAll","currentListOfTodos","createNewDo","name","concat","Object","toConsumableArray","dos","dooDone","doos","notCompleted","some","doo","src_LayoutHeader","src_LayoutMain","src_LayoutFooter","App","src_LayoutAll","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.181a7e75.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LayoutMain extends React.Component {\n  deleteDo = (e) => {\n    const { id } = e.target.dataset;\n\n    this.props.destroyElement(id);\n  }\n\n  checkDo = (e) => {\n    const { id } = e.target.dataset;\n\n    this.props.checkDone(id);\n  }\n\n  allIsDone = () => {\n    this.props.allDone();\n  }\n\n  render() {\n    let { listOfTodos } = this.props.getTodos();\n\n    if (this.props.getTodos().show === 'Active') {\n      listOfTodos = listOfTodos.filter(todo => todo.isDone === false);\n    }\n\n    if (this.props.getTodos().show === 'All') {\n      const list = this.props.getTodos().listOfTodos;\n\n      listOfTodos = list;\n    }\n\n    if (this.props.getTodos().show === 'Completed') {\n      listOfTodos = listOfTodos.filter(todo => todo.isDone === true);\n    }\n\n    const completedIds = (\n      listOfTodos.filter(todo => todo.isDone === true).map(todo => todo.id)\n    );\n    const labelText = 'Mark all as complete';\n\n    return (\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={listOfTodos.length === completedIds.length\n            && listOfTodos.length !== 0}\n          onChange={this.allIsDone}\n        />\n        <label htmlFor=\"toggle-all\">{labelText}</label>\n        <ul className=\"todo-list\">\n          {\n            listOfTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={completedIds.includes(todo.id) ? 'completed' : ''}\n              >\n                <div className=\"view\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    data-id={todo.id}\n                    onChange={this.checkDo}\n                    checked={todo.isDone === true}\n                  />\n                  <label htmlFor=\"noexist\">\n                    {todo.todoName}\n                  </label>\n                  <button\n                    type=\"button\"\n                    className=\"destroy\"\n                    onClick={this.deleteDo}\n                    data-id={todo.id}\n                  />\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n      </section>\n    );\n  }\n}\n\nLayoutMain.propTypes = {\n  getTodos: PropTypes.func.isRequired,\n  allDone: PropTypes.func.isRequired,\n  checkDone: PropTypes.func.isRequired,\n  destroyElement: PropTypes.func.isRequired,\n};\n\nexport default LayoutMain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LayoutHeader extends React.Component {\n  state = {\n    doName: '',\n  }\n\n  changeName = (e) => {\n    this.setState({\n      doName: e.target.value,\n    });\n  }\n\n  addDoToList = (e) => {\n    e.preventDefault();\n    this.props.addDo(this.state.doName);\n    this.setState({ doName: '' });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.addDoToList}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.changeName}\n            value={this.state.doName}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nLayoutHeader.propTypes = { addDo: PropTypes.func.isRequired };\n\nexport default LayoutHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LayoutFooter extends React.Component {\n  render() {\n    const checkDoos = this.props.showFooter();\n    const show = this.props.getShow();\n\n    if (checkDoos.length > 0) {\n      return (\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {checkDoos.isNotDone}\n            {' '}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={show === 'All' ? 'selected' : ''}\n                onClick={this.props.showAll}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={show === 'Active' ? 'selected' : ''}\n                onClick={this.props.activeOnly}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={show === 'Completed' ? 'selected' : ''}\n                onClick={this.props.completedOnly}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.props.clearCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      );\n    }\n\n    return '';\n  }\n}\n\nLayoutFooter.propTypes = {\n  showFooter: PropTypes.func.isRequired,\n  getShow: PropTypes.func.isRequired,\n  showAll: PropTypes.func.isRequired,\n  activeOnly: PropTypes.func.isRequired,\n  completedOnly: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\nexport default LayoutFooter;\n","import React from 'react';\nimport LayoutMain from './LayoutMain';\nimport LayoutHeader from './LayoutHeader';\nimport LayoutFooter from './LayoutFooter';\n\nclass LayoutAll extends React.Component {\n  state = {\n    listOfTodos: [],\n    id: 0,\n    show: 'All',\n  };\n\n  currentListOfTodos = () => ({\n    listOfTodos: this.state.listOfTodos,\n    show: this.state.show,\n  })\n\n  createNewDo = (name) => {\n    this.setState(state => ({\n      listOfTodos: [\n        ...state.listOfTodos,\n        {\n          todoName: name,\n          isDone: false,\n          id: state.id,\n        },\n      ],\n      id: state.id + 1,\n    }));\n  }\n\n  destroyElement = (id) => {\n    this.setState(state => ({\n      listOfTodos:\n      state.listOfTodos.filter(dos => dos.id !== +id),\n    }));\n  }\n\n  dooDone = (id) => {\n    this.setState(state => ({\n      listOfTodos: state.listOfTodos.map(doos => ({\n        todoName: doos.todoName,\n        isDone: doos.id === +id ? !doos.isDone : doos.isDone,\n        id: doos.id,\n      })),\n    }));\n  }\n\n  allDone = () => {\n    const notCompleted = (\n      this.state.listOfTodos.some(todo => todo.isDone === false)\n    );\n\n    this.setState(state => ({\n      listOfTodos: state.listOfTodos.map(doos => ({\n        todoName: doos.todoName,\n        isDone: notCompleted === true,\n        id: doos.id,\n      })),\n    }));\n  }\n\n  showFooter = () => {\n    const doosData = {\n      length: this.state.listOfTodos.length,\n      isNotDone:\n      this.state.listOfTodos.filter(doo => doo.isDone === false).length,\n    };\n\n    return doosData;\n  }\n\n  getShow = () => this.state.show;\n\n  activeOnly = () => {\n    this.setState({ show: 'Active' });\n  }\n\n  showAll = () => {\n    this.setState({ show: 'All' });\n  }\n\n  completedOnly = () => {\n    this.setState({ show: 'Completed' });\n  }\n\n  clearCompleted = () => {\n    this.setState(state => ({\n      listOfTodos: state.listOfTodos.filter(doos => doos.isDone === false),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <LayoutHeader addDo={this.createNewDo} />\n        <LayoutMain\n          getTodos={this.currentListOfTodos}\n          destroyElement={this.destroyElement}\n          checkDone={this.dooDone}\n          allDone={this.allDone}\n        />\n        <LayoutFooter\n          showFooter={this.showFooter}\n          getShow={this.getShow}\n          activeOnly={this.activeOnly}\n          completedOnly={this.completedOnly}\n          showAll={this.showAll}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default LayoutAll;\n","import React from 'react';\nimport LayoutAll from './LayoutAll';\n\nfunction App() {\n  return (\n    <LayoutAll />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}