{"version":3,"sources":["filterTypes.js","LayoutMain.js","LayoutHeader.js","LayoutFooter.js","LayoutAll.js","App.js","index.js"],"names":["FILTER_TYPES","all","completed","active","LayoutMain","deleteDo","e","id","target","dataset","_this","props","destroyElement","checkDo","checkDone","allIsDone","allDone","_this2","this","listOfTodos","getTodos","currentFilter","filter","todo","isDone","completedIds","map","react_default","a","createElement","className","style","display","type","length","checked","onChange","htmlFor","key","includes","data-id","onClick","todoName","React","Component","LayoutHeader","state","doName","changeName","setState","value","addToDoToList","preventDefault","addToDo","onSubmit","placeholder","LayoutFooter","checkDoos","showFooter","show","getCurrentFilter","isNotDone","href","showAllToDos","showActiveToDos","showCompletedToDos","clearCompletedToDos","LayoutAll","lastIdOfTodos","currentListOfTodos","createNewDo","title","concat","Object","toConsumableArray","dos","dooDone","doos","notCompleted","some","doo","src_LayoutHeader","src_LayoutMain","src_LayoutFooter","App","src_LayoutAll","ReactDOM","render","src_App","document","getElementById"],"mappings":"sOAMeA,EANM,CACnBC,IAAK,MACLC,UAAW,YACXC,OAAQ,UCsGKC,6MApGbC,SAAW,SAACC,GAAM,IACRC,EAAOD,EAAEE,OAAOC,QAAhBF,GAERG,EAAKC,MAAMC,eAAeL,MAG5BM,QAAU,SAACP,GAAM,IACPC,EAAOD,EAAEE,OAAOC,QAAhBF,GAERG,EAAKC,MAAMG,UAAUP,MAGvBQ,UAAY,WACVL,EAAKC,MAAMK,mFAGJ,IAAAC,EAAAC,KACDC,EAAgBD,KAAKP,MAAMS,WAA3BD,aAEFD,KAAKP,MAAMS,WAAWC,gBAAkBrB,EAAaG,SACvDgB,EAAcA,EAAYG,OAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKC,UAG5CN,KAAKP,MAAMS,WAAWC,gBAAkBrB,EAAaC,OAGvDkB,EAFaD,KAAKP,MAAMS,WAAWD,aAKjCD,KAAKP,MAAMS,WAAWC,gBAAkBrB,EAAaE,YACvDiB,EAAcA,EAAYG,OAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKC,UAGhD,IAAMC,EACJN,EAAYG,OAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKC,SAAiBE,IAAI,SAAAH,GAAI,OAAIA,EAAKhB,KAIpE,OACEoB,EAAAC,EAAAC,cAAA,WAASC,UAAU,OAAOC,MAAO,CAAEC,QAAS,UAC1CL,EAAAC,EAAAC,cAAA,SACEI,KAAK,WACL1B,GAAG,aACHuB,UAAWX,EAAYe,OAAS,EAAI,aAAe,cACnDC,QAAShB,EAAYe,SAAWT,EAAaS,QACjB,IAAvBf,EAAYe,OACjBE,SAAUlB,KAAKH,YAEjBY,EAAAC,EAAAC,cAAA,SACEQ,QAAQ,aACRP,UAAWX,EAAYe,OAAS,EAAI,QAAU,qBAdlC,wBAkBdP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAEVX,EAAYO,IAAI,SAAAH,GAAI,OAClBI,EAAAC,EAAAC,cAAA,MACES,IAAKf,EAAKhB,GACVuB,UAAWL,EAAac,SAAShB,EAAKhB,IAAM,YAAc,IAE1DoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SACEI,KAAK,WACLH,UAAU,SACVU,UAASjB,EAAKhB,GACd6B,SAAUnB,EAAKJ,QACfsB,SAAyB,IAAhBZ,EAAKC,SAEhBG,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,kBACVW,QAASxB,EAAKJ,QACd2B,UAASjB,EAAKhB,IAEbgB,EAAKmB,UAERf,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,UACVW,QAASxB,EAAKZ,SACdmC,UAASjB,EAAKhB,kBAlFToC,IAAMC,WCmChBC,6MAnCbC,MAAQ,CACNC,OAAQ,MAGVC,WAAa,SAAC1C,GACZI,EAAKuC,SAAS,CACZF,OAAQzC,EAAEE,OAAO0C,WAIrBC,cAAgB,SAAC7C,GACfA,EAAE8C,iBACF1C,EAAKC,MAAM0C,QAAQ3C,EAAKoC,MAAMC,QAC9BrC,EAAKuC,SAAS,CAAEF,OAAQ,8EAIxB,OACEpB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAMyB,SAAUpC,KAAKiC,eACnBxB,EAAAC,EAAAC,cAAA,SACEC,UAAU,WACVyB,YAAY,yBACZnB,SAAUlB,KAAK8B,WACfE,MAAOhC,KAAK4B,MAAMC,kBA1BHJ,IAAMC,WCuElBY,mLArEX,IAAMC,EAAYvC,KAAKP,MAAM+C,aACvBC,EAAOzC,KAAKP,MAAMiD,mBAExB,OAAIH,EAAUvB,OAAS,EAEnBP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,MAAO,CAAEC,QAAS,UAC3CL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACb2B,EAAUI,UACV,IAFH,cAMAlC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEiC,KAAK,KACLhC,UAAoB,QAAT6B,EAAiB,WAAa,GACzClB,QAASvB,KAAKP,MAAMoD,cAHtB,QASFpC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEiC,KAAK,WACLhC,UAAoB,WAAT6B,EAAoB,WAAa,GAC5ClB,QAASvB,KAAKP,MAAMqD,iBAHtB,WASFrC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEiC,KAAK,cACLhC,UAAoB,cAAT6B,EAAuB,WAAa,GAC/ClB,QAASvB,KAAKP,MAAMsD,oBAHtB,eAUJtC,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,kBACVC,MAAO,CAAEC,QAAS,SAClBS,QAASvB,KAAKP,MAAMuD,qBAJtB,oBAYC,UA1DgBvB,IAAMC,WCiHlBuB,6MA7GbrB,MAAQ,CACN3B,YAAa,GACbiD,cAAe,EACf/C,cAAerB,EAAaC,OAG9BoE,mBAAqB,iBAAO,CAC1BlD,YAAaT,EAAKoC,MAAM3B,YACxBE,cAAeX,EAAKoC,MAAMzB,kBAG5BiD,YAAc,SAACC,GACb7D,EAAKuC,SAAS,SAAAH,GAAK,MAAK,CACtB3B,YAAW,GAAAqD,OAAAC,OAAAC,EAAA,EAAAD,CACN3B,EAAM3B,aADA,CAET,CACEuB,SAAU6B,EACV/C,QAAQ,EACRjB,GAAIuC,EAAMsB,iBAGdA,cAAetB,EAAMsB,cAAgB,QAIzCxD,eAAiB,SAACL,GAChBG,EAAKuC,SAAS,SAAAH,GAAK,MAAK,CACtB3B,YACA2B,EAAM3B,YAAYG,OAAO,SAAAqD,GAAG,OAAIA,EAAIpE,MAAQA,UAIhDqE,QAAU,SAACrE,GACTG,EAAKuC,SAAS,SAAAH,GAAK,MAAK,CACtB3B,YAAa2B,EAAM3B,YAAYO,IAAI,SAAAmD,GAAI,MAAK,CAC1CnC,SAAUmC,EAAKnC,SACflB,OAAQqD,EAAKtE,MAAQA,GAAMsE,EAAKrD,OAASqD,EAAKrD,OAC9CjB,GAAIsE,EAAKtE,YAKfS,QAAU,WACR,IAAM8D,EACJpE,EAAKoC,MAAM3B,YAAY4D,KAAK,SAAAxD,GAAI,OAAoB,IAAhBA,EAAKC,SAG3Cd,EAAKuC,SAAS,SAAAH,GAAK,MAAK,CACtB3B,YAAa2B,EAAM3B,YAAYO,IAAI,SAAAmD,GAAI,MAAK,CAC1CnC,SAAUmC,EAAKnC,SACflB,QAAyB,IAAjBsD,EACRvE,GAAIsE,EAAKtE,YAKfmD,WAAa,WAOX,MANiB,CACfxB,OAAQxB,EAAKoC,MAAM3B,YAAYe,OAC/B2B,UACAnD,EAAKoC,MAAM3B,YAAYG,OAAO,SAAA0D,GAAG,OAAmB,IAAfA,EAAIxD,SAAkBU,WAM/D0B,iBAAmB,kBAAMlD,EAAKoC,MAAMzB,iBAEpC2C,gBAAkB,WAChBtD,EAAKuC,SAAS,CAAE5B,cAAerB,EAAaG,YAG9C4D,aAAe,WACbrD,EAAKuC,SAAS,CAAE5B,cAAerB,EAAaC,SAG9CgE,mBAAqB,WACnBvD,EAAKuC,SAAS,CAAE5B,cAAerB,EAAaE,eAG9CgE,oBAAsB,WACpBxD,EAAKuC,SAAS,SAAAH,GAAK,MAAK,CACtB3B,YAAa2B,EAAM3B,YAAYG,OAAO,SAAAuD,GAAI,OAAoB,IAAhBA,EAAKrD,qFAKrD,OACEG,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAACoD,EAAD,CAAc5B,QAASnC,KAAKoD,cAC5B3C,EAAAC,EAAAC,cAACqD,EAAD,CACE9D,SAAUF,KAAKmD,mBACfzD,eAAgBM,KAAKN,eACrBE,UAAWI,KAAK0D,QAChB5D,QAASE,KAAKF,UAEhBW,EAAAC,EAAAC,cAACsD,EAAD,CACEzB,WAAYxC,KAAKwC,WACjBE,iBAAkB1C,KAAK0C,iBACvBI,gBAAiB9C,KAAK8C,gBACtBC,mBAAoB/C,KAAK+C,mBACzBF,aAAc7C,KAAK6C,aACnBG,oBAAqBhD,KAAKgD,8BAvGZvB,IAAMC,WCGfwC,MANf,WACE,OACEzD,EAAAC,EAAAC,cAACwD,EAAD,OCCJC,IAASC,OACP5D,EAAAC,EAAAC,cAAC2D,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.1569bf6b.chunk.js","sourcesContent":["const FILTER_TYPES = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nexport default FILTER_TYPES;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FILTER_TYPES from './filterTypes';\n\nclass LayoutMain extends React.Component {\n  deleteDo = (e) => {\n    const { id } = e.target.dataset;\n\n    this.props.destroyElement(id);\n  }\n\n  checkDo = (e) => {\n    const { id } = e.target.dataset;\n\n    this.props.checkDone(id);\n  }\n\n  allIsDone = () => {\n    this.props.allDone();\n  }\n\n  render() {\n    let { listOfTodos } = this.props.getTodos();\n\n    if (this.props.getTodos().currentFilter === FILTER_TYPES.active) {\n      listOfTodos = listOfTodos.filter(todo => todo.isDone === false);\n    }\n\n    if (this.props.getTodos().currentFilter === FILTER_TYPES.all) {\n      const list = this.props.getTodos().listOfTodos;\n\n      listOfTodos = list;\n    }\n\n    if (this.props.getTodos().currentFilter === FILTER_TYPES.completed) {\n      listOfTodos = listOfTodos.filter(todo => todo.isDone === true);\n    }\n\n    const completedIds = (\n      listOfTodos.filter(todo => todo.isDone === true).map(todo => todo.id)\n    );\n    const labelText = 'Mark all as complete';\n\n    return (\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className={listOfTodos.length > 0 ? 'toggle-all' : 'not-display'}\n          checked={listOfTodos.length === completedIds.length\n            && listOfTodos.length !== 0}\n          onChange={this.allIsDone}\n        />\n        <label\n          htmlFor=\"toggle-all\"\n          className={listOfTodos.length > 0 ? 'label' : 'not-display label'}\n        >\n          {labelText}\n        </label>\n        <ul className=\"todo-list\">\n          {\n            listOfTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={completedIds.includes(todo.id) ? 'completed' : ''}\n              >\n                <div className=\"view\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    data-id={todo.id}\n                    onChange={this.checkDo}\n                    checked={todo.isDone === true}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"label button-do\"\n                    onClick={this.checkDo}\n                    data-id={todo.id}\n                  >\n                    {todo.todoName}\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"destroy\"\n                    onClick={this.deleteDo}\n                    data-id={todo.id}\n                  />\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n      </section>\n    );\n  }\n}\n\nLayoutMain.propTypes = {\n  getTodos: PropTypes.func.isRequired,\n  allDone: PropTypes.func.isRequired,\n  checkDone: PropTypes.func.isRequired,\n  destroyElement: PropTypes.func.isRequired,\n};\n\nexport default LayoutMain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LayoutHeader extends React.Component {\n  state = {\n    doName: '',\n  }\n\n  changeName = (e) => {\n    this.setState({\n      doName: e.target.value,\n    });\n  }\n\n  addToDoToList = (e) => {\n    e.preventDefault();\n    this.props.addToDo(this.state.doName);\n    this.setState({ doName: '' });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.addToDoToList}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.changeName}\n            value={this.state.doName}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nLayoutHeader.propTypes = { addToDo: PropTypes.func.isRequired };\n\nexport default LayoutHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LayoutFooter extends React.Component {\n  render() {\n    const checkDoos = this.props.showFooter();\n    const show = this.props.getCurrentFilter();\n\n    if (checkDoos.length > 0) {\n      return (\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {checkDoos.isNotDone}\n            {' '}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={show === 'All' ? 'selected' : ''}\n                onClick={this.props.showAllToDos}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={show === 'Active' ? 'selected' : ''}\n                onClick={this.props.showActiveToDos}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={show === 'Completed' ? 'selected' : ''}\n                onClick={this.props.showCompletedToDos}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.props.clearCompletedToDos}\n          >\n            Clear completed\n          </button>\n        </footer>\n      );\n    }\n\n    return '';\n  }\n}\n\nLayoutFooter.propTypes = {\n  showFooter: PropTypes.func.isRequired,\n  getCurrentFilter: PropTypes.func.isRequired,\n  showAllToDos: PropTypes.func.isRequired,\n  showActiveToDos: PropTypes.func.isRequired,\n  showCompletedToDos: PropTypes.func.isRequired,\n  clearCompletedToDos: PropTypes.func.isRequired,\n};\n\nexport default LayoutFooter;\n","import React from 'react';\nimport LayoutMain from './LayoutMain';\nimport LayoutHeader from './LayoutHeader';\nimport LayoutFooter from './LayoutFooter';\nimport FILTER_TYPES from './filterTypes';\n\nclass LayoutAll extends React.Component {\n  state = {\n    listOfTodos: [],\n    lastIdOfTodos: 0,\n    currentFilter: FILTER_TYPES.all,\n  };\n\n  currentListOfTodos = () => ({\n    listOfTodos: this.state.listOfTodos,\n    currentFilter: this.state.currentFilter,\n  })\n\n  createNewDo = (title) => {\n    this.setState(state => ({\n      listOfTodos: [\n        ...state.listOfTodos,\n        {\n          todoName: title,\n          isDone: false,\n          id: state.lastIdOfTodos,\n        },\n      ],\n      lastIdOfTodos: state.lastIdOfTodos + 1,\n    }));\n  }\n\n  destroyElement = (id) => {\n    this.setState(state => ({\n      listOfTodos:\n      state.listOfTodos.filter(dos => dos.id !== +id),\n    }));\n  }\n\n  dooDone = (id) => {\n    this.setState(state => ({\n      listOfTodos: state.listOfTodos.map(doos => ({\n        todoName: doos.todoName,\n        isDone: doos.id === +id ? !doos.isDone : doos.isDone,\n        id: doos.id,\n      })),\n    }));\n  }\n\n  allDone = () => {\n    const notCompleted = (\n      this.state.listOfTodos.some(todo => todo.isDone === false)\n    );\n\n    this.setState(state => ({\n      listOfTodos: state.listOfTodos.map(doos => ({\n        todoName: doos.todoName,\n        isDone: notCompleted === true,\n        id: doos.id,\n      })),\n    }));\n  }\n\n  showFooter = () => {\n    const doosData = {\n      length: this.state.listOfTodos.length,\n      isNotDone:\n      this.state.listOfTodos.filter(doo => doo.isDone === false).length,\n    };\n\n    return doosData;\n  }\n\n  getCurrentFilter = () => this.state.currentFilter;\n\n  showActiveToDos = () => {\n    this.setState({ currentFilter: FILTER_TYPES.active });\n  }\n\n  showAllToDos = () => {\n    this.setState({ currentFilter: FILTER_TYPES.all });\n  }\n\n  showCompletedToDos = () => {\n    this.setState({ currentFilter: FILTER_TYPES.completed });\n  }\n\n  clearCompletedToDos = () => {\n    this.setState(state => ({\n      listOfTodos: state.listOfTodos.filter(doos => doos.isDone === false),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <LayoutHeader addToDo={this.createNewDo} />\n        <LayoutMain\n          getTodos={this.currentListOfTodos}\n          destroyElement={this.destroyElement}\n          checkDone={this.dooDone}\n          allDone={this.allDone}\n        />\n        <LayoutFooter\n          showFooter={this.showFooter}\n          getCurrentFilter={this.getCurrentFilter}\n          showActiveToDos={this.showActiveToDos}\n          showCompletedToDos={this.showCompletedToDos}\n          showAllToDos={this.showAllToDos}\n          clearCompletedToDos={this.clearCompletedToDos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default LayoutAll;\n","import React from 'react';\nimport LayoutAll from './LayoutAll';\n\nfunction App() {\n  return (\n    <LayoutAll />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}